pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'bubblesort-c'
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Ethan-DNG/JenkinsProject.git'
            }
        }

        stage('Build') {
            steps {
                echo 'Compilation du programme...'
                sh 'make clean && make all'
            }
        }

        stage('Test') {
            steps {
                echo 'Exécution des tests...'
                sh 'bash test/test_bubble.sh'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Construction de l\'image Docker...'
                script {
                    // Lancer la commande exacte du Dockerfile
                    sh 'docker build -t bubblesort-c:latest .'
                }
            }
        }


        stage('Archive') {
            steps {
                archiveArtifacts artifacts: '**/output.txt', fingerprint: true
                
                script {
                    sh "docker save ${DOCKER_IMAGE}:${DOCKER_TAG} -o ${DOCKER_IMAGE}-${DOCKER_TAG}.tar"
                    archiveArtifacts artifacts: "*.tar", fingerprint: true
                }
            }
        }

        stage('Push Docker Image') {
    steps {
        echo 'Poussée de l’image Docker vers Docker Hub...'
        script {
            def dockerHubUser = 'dan270'  // Ton nom d'utilisateur Docker Hub
            def imageName = "${dockerHubUser}/${DOCKER_IMAGE}:${DOCKER_TAG}"

            // Tag l'image avec ton compte Docker Hub
            sh "docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${imageName}"

            // Pousse l'image
            docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                docker.image(imageName).push()
            }
        }
    }
}
    }


}
